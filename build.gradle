buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.0'
  }
}

group = 'com.github.jcandksolutions.gradle'
version = '2.1.2-SNAPSHOT'
ext.userName = null
ext.passWord = null
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
ext.isTravisMachine = "$System.env.CI"

if (hasProperty('sonatypeUsername')) {
  userName = sonatypeUsername
}

if (hasProperty('sonatypePassword')) {
  passWord = sonatypePassword
}

apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'signing'
if (isTravisMachine == "true") {
  apply plugin: 'jacoco'
  apply plugin: 'com.github.kt3k.coveralls'
}

dependencies {
  repositories {
    jcenter()
  }

  compile gradleApi()
  compile localGroovy()
  compile 'com.android.tools.build:gradle:1.0.0'

  testCompile 'junit:junit:4.11'
  testCompile 'org.easytesting:fest-assert-core:2.0M10'
  testCompile 'org.mockito:mockito-all:1.9.5'
  testCompile 'com.cyrusinnovation:mockito-groovy-support:1.3'
}

if (isTravisMachine != "true") {
  compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
    options.bootClasspath = "${System.env.JDK7_HOME}/jre/lib/rt.jar"
  }
  compileTestJava {
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
    options.bootClasspath = "${System.env.JDK7_HOME}/jre/lib/rt.jar"
  }
  compileGroovy {
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
    options.bootClasspath = "${System.env.JDK7_HOME}/jre/lib/rt.jar"
  }
  compileTestGroovy {
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
    options.bootClasspath = "${System.env.JDK7_HOME}/jre/lib/rt.jar"
  }
  test {
    jvmArgs '-noverify'
  }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from 'build/docs/javadoc'
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
  classifier = 'groovydoc'
  from 'build/docs/groovydoc'
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}

artifacts {
  archives jar
  archives javadocJar
  archives groovydocJar
  archives sourcesJar
}

signing {
  required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
  sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: userName, password: passWord)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: userName, password: passWord)
      }

      pom.project {
        name 'android-unit-test'
        packaging 'jar'
        description 'Gradle plugin to add unit testing to android plugin. Prepared for Robolectric.'
        url 'http://jcandksolutions.github.io/android-unit-test'

        scm {
          url 'https://github.com/jcandksolutions/android-unit-test'
          connection 'https://github.com/jcandksolutions/android-unit-test'
          developerConnection 'https://github.com/jcandksolutions/android-unit-test'
        }

        licenses {
          license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
          }
        }

        developers {
          developer {
            id 'SuperJugy'
            name 'JÃ¼rgen Cruz'
          }
        }
      }
    }
  }
}

if (isTravisMachine == "true") {
  jacoco {
    toolVersion = "0.7.2.201409121644"
  }

  jacocoTestReport {
    reports {
      xml.enabled = true // coveralls plugin depends on xml format report
      html.enabled = true
    }
  }
}
